;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name com.rpl.specter.impl, :imports nil, :requires {com.rpl.specter.protocols com.rpl.specter.protocols, walk clojure.walk, clojure.walk clojure.walk, r clojure.core.reducers, clojure.core.reducers clojure.core.reducers}, :uses {StructureValsPath com.rpl.specter.protocols, comp-paths* com.rpl.specter.protocols, StructurePath com.rpl.specter.protocols, StructureValsPathComposer com.rpl.specter.protocols, Collector com.rpl.specter.protocols}, :defs {->SRangePath {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 457, :column 10, :end-line 457, :end-column 20, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([start-fn end-fn]))}, :protocols #{}, :name com.rpl.specter.impl/->SRangePath, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 20, :method-params ([start-fn end-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 457, :end-line 457, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start-fn end-fn])), :skip-protocol-flag nil}, ExecutorFunctions {:num-fields 3, :protocols #{}, :name com.rpl.specter.impl/ExecutorFunctions, :file "src/com/rpl/specter/impl.cljc", :end-column 27, :type true, :column 10, :line 28, :record false, :end-line 28, :skip-protocol-flag nil}, LastStructurePath {:num-fields 0, :protocols #{}, :name com.rpl.specter.impl/LastStructurePath, :file "src/com/rpl/specter/impl.cljc", :end-column 27, :type true, :column 10, :line 387, :record false, :end-line 387, :skip-protocol-flag nil}, PMutableCell {:meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 242, :column 14, :end-line 242, :end-column 26, :doc nil, :protocol-symbol true, :protocol-info {:methods {get_cell [[cell]], set_cell [[cell x]]}}}, :protocol-symbol true, :name com.rpl.specter.impl/PMutableCell, :file "src/com/rpl/specter/impl.cljc", :end-column 26, :column 1, :line 242, :protocol-info {:methods {get_cell [[cell]], set_cell [[cell x]]}}, :info nil, :end-line 242, :impls #{com.rpl.specter.impl/MutableCell}, :doc nil}, key-select {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 359, :column 7, :end-line 359, :end-column 17, :arglists (quote ([akey structure next-fn]))}, :name com.rpl.specter.impl/key-select, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 17, :method-params ([akey structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 359, :end-line 359, :max-fixed-arity 3, :fn-var true, :arglists (quote ([akey structure next-fn]))}, SRangePath {:num-fields 2, :protocols #{}, :name com.rpl.specter.impl/SRangePath, :file "src/com/rpl/specter/impl.cljc", :end-column 20, :type true, :column 10, :line 457, :record false, :end-line 457, :skip-protocol-flag nil}, ValCollect {:num-fields 0, :protocols #{}, :name com.rpl.specter.impl/ValCollect, :file "src/com/rpl/specter/impl.cljc", :end-column 20, :type true, :column 10, :line 380, :record false, :end-line 380, :skip-protocol-flag nil}, FilterStructurePath {:num-fields 1, :protocols #{}, :name com.rpl.specter.impl/FilterStructurePath, :file "src/com/rpl/specter/impl.cljc", :end-column 29, :type true, :column 10, :line 424, :record false, :end-line 424, :skip-protocol-flag nil}, ->MutableCell {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 246, :column 10, :end-line 246, :end-column 21, :protocols #{com.rpl.specter.impl/PMutableCell}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([q]))}, :protocols #{com.rpl.specter.impl/PMutableCell}, :name com.rpl.specter.impl/->MutableCell, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 21, :method-params ([q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 246, :end-line 246, :max-fixed-arity 1, :fn-var true, :arglists (quote ([q])), :skip-protocol-flag nil}, ->LastStructurePath {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 387, :column 10, :end-line 387, :end-column 27, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([]))}, :protocols #{}, :name com.rpl.specter.impl/->LastStructurePath, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 387, :end-line 387, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :skip-protocol-flag nil}, coerce-structure-vals {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 189, :column 7, :end-line 189, :end-column 28, :arglists (quote ([tfns]))}, :name com.rpl.specter.impl/coerce-structure-vals, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 28, :method-params ([tfns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tfns]))}, set-first-list {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 273, :column 8, :end-line 273, :end-column 22, :private true, :arglists (quote ([l v]))}, :private true, :name com.rpl.specter.impl/set-first-list, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 22, :method-params ([l v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 273, :end-line 273, :max-fixed-arity 2, :fn-var true, :arglists (quote ([l v]))}, ->FirstStructurePath {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 396, :column 10, :end-line 396, :end-column 28, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([]))}, :protocols #{}, :name com.rpl.specter.impl/->FirstStructurePath, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 396, :end-line 396, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :skip-protocol-flag nil}, find-protocol-impl! {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 67, :column 7, :end-line 67, :end-column 26, :arglists (quote ([prot obj]))}, :name com.rpl.specter.impl/find-protocol-impl!, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 26, :method-params ([prot obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prot obj]))}, walk-until {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 292, :column 8, :end-line 292, :end-column 18, :private true, :arglists (quote ([pred on-match-fn structure]))}, :private true, :name com.rpl.specter.impl/walk-until, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 18, :method-params ([pred on-match-fn structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 292, :end-line 292, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pred on-match-fn structure]))}, extype {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 156, :column 7, :end-line 156, :end-column 13, :arglists (quote ([f]))}, :name com.rpl.specter.impl/extype, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 13, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, coerce-structure-vals-direct {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 223, :column 7, :end-line 223, :end-column 35, :arglists (quote ([this]))}, :name com.rpl.specter.impl/coerce-structure-vals-direct, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 35, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 223, :end-line 223, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this]))}, KeyPath {:num-fields 1, :protocols #{}, :name com.rpl.specter.impl/KeyPath, :file "src/com/rpl/specter/impl.cljc", :end-column 17, :type true, :column 10, :line 440, :record false, :end-line 440, :skip-protocol-flag nil}, StructurePath {:impls (com.rpl.specter.impl/ConditionalPath nil com.rpl.specter.impl/ViewPath com.rpl.specter.impl/SRangePath com.rpl.specter.impl/KeyPath com.rpl.specter.impl/FilterStructurePath com.rpl.specter.impl/CodeWalkerStructurePath com.rpl.specter.impl/WalkerStructurePath com.rpl.specter.impl/FirstStructurePath com.rpl.specter.impl/LastStructurePath com.rpl.specter.impl/AllStructurePath)}, set-last {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 271, :column 4, :end-line 271, :end-column 12, :protocol com.rpl.specter.impl/SetExtremes, :doc nil, :arglists (quote ([s val]))}, :protocol com.rpl.specter.impl/SetExtremes, :name com.rpl.specter.impl/set-last, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 12, :method-params ([s val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 269, :end-line 271, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s val])), :doc nil}, update-cell! {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 261, :column 7, :end-line 261, :end-column 19, :arglists (quote ([cell afn]))}, :name com.rpl.specter.impl/update-cell!, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 19, :method-params ([cell afn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cell afn]))}, coerce-collector {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 86, :column 7, :end-line 86, :end-column 23, :arglists (quote ([this]))}, :name com.rpl.specter.impl/coerce-collector, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this]))}, mutable-cell {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 251, :column 7, :end-line 251, :end-column 19, :arglists (quote ([] [init])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [init]), :arglists ([] [init]), :arglists-meta (nil nil)}}, :name com.rpl.specter.impl/mutable-cell, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [init]), :arglists ([] [init]), :arglists-meta (nil nil)}, :method-params ([] [init]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 1, :fn-var true, :arglists ([] [init])}, coerce-structure-path-direct {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 115, :column 7, :end-line 115, :end-column 35, :arglists (quote ([this]))}, :name com.rpl.specter.impl/coerce-structure-path-direct, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 35, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this]))}, ViewPath {:num-fields 1, :protocols #{}, :name com.rpl.specter.impl/ViewPath, :file "src/com/rpl/specter/impl.cljc", :end-column 18, :type true, :column 10, :line 479, :record false, :end-line 479, :skip-protocol-flag nil}, compiled-transform* {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 321, :column 7, :end-line 321, :end-column 26, :arglists (quote ([tfns transform-fn structure]))}, :name com.rpl.specter.impl/compiled-transform*, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 26, :method-params ([tfns transform-fn structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tfns transform-fn structure]))}, ->SelectCollector {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 450, :column 10, :end-line 450, :end-column 25, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([sel-fn selector]))}, :protocols #{}, :name com.rpl.specter.impl/->SelectCollector, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 25, :method-params ([sel-fn selector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 450, :end-line 450, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sel-fn selector])), :skip-protocol-flag nil}, selected?* {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 327, :column 7, :end-line 327, :end-column 17, :arglists (quote ([compiled-path structure]))}, :name com.rpl.specter.impl/selected?*, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 17, :method-params ([compiled-path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 327, :end-line 327, :max-fixed-arity 2, :fn-var true, :arglists (quote ([compiled-path structure]))}, ->WalkerStructurePath {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 405, :column 10, :end-line 405, :end-column 29, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([afn]))}, :protocols #{}, :name com.rpl.specter.impl/->WalkerStructurePath, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 29, :method-params ([afn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 405, :end-line 405, :max-fixed-arity 1, :fn-var true, :arglists (quote ([afn])), :skip-protocol-flag nil}, ->AllStructurePath {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 366, :column 10, :end-line 366, :end-column 26, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([]))}, :protocols #{}, :name com.rpl.specter.impl/->AllStructurePath, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 366, :end-line 366, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :skip-protocol-flag nil}, set_cell {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 244, :column 4, :end-line 244, :end-column 12, :protocol com.rpl.specter.impl/PMutableCell, :doc nil, :arglists (quote ([cell x]))}, :protocol com.rpl.specter.impl/PMutableCell, :name com.rpl.specter.impl/set_cell, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 12, :method-params ([cell x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 242, :end-line 244, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cell x])), :doc nil}, combine-same-types {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 161, :column 8, :end-line 161, :end-column 26, :private true, :arglists (quote ([[f & _ :as all]]))}, :private true, :name com.rpl.specter.impl/combine-same-types, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 26, :method-params ([p__276]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[f & _ :as all]]))}, get_cell {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 243, :column 4, :end-line 243, :end-column 12, :protocol com.rpl.specter.impl/PMutableCell, :doc nil, :arglists (quote ([cell]))}, :protocol com.rpl.specter.impl/PMutableCell, :name com.rpl.specter.impl/get_cell, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 12, :method-params ([cell]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 242, :end-line 243, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cell])), :doc nil}, ->CodeWalkerStructurePath {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 414, :column 10, :end-line 414, :end-column 33, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([afn]))}, :protocols #{}, :name com.rpl.specter.impl/->CodeWalkerStructurePath, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 33, :method-params ([afn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 414, :end-line 414, :max-fixed-arity 1, :fn-var true, :arglists (quote ([afn])), :skip-protocol-flag nil}, filter+ancestry {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 346, :column 8, :end-line 346, :end-column 23, :private true, :arglists (quote ([path aseq]))}, :private true, :name com.rpl.specter.impl/filter+ancestry, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 23, :method-params ([path aseq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 346, :end-line 346, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path aseq]))}, retrieve-selector {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 509, :column 8, :end-line 509, :end-column 25, :private true, :arglists (quote ([cond-pairs structure]))}, :private true, :name com.rpl.specter.impl/retrieve-selector, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 25, :method-params ([cond-pairs structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 509, :end-line 509, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cond-pairs structure]))}, CoerceTransformFunctions {:meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 57, :column 14, :end-line 57, :end-column 38, :doc nil, :protocol-symbol true, :protocol-info {:methods {coerce-path [[this]]}}}, :protocol-symbol true, :name com.rpl.specter.impl/CoerceTransformFunctions, :file "src/com/rpl/specter/impl.cljc", :end-column 38, :column 1, :line 57, :protocol-info {:methods {coerce-path [[this]]}}, :info nil, :end-line 57, :impls #{nil cljs.core/PersistentVector com.rpl.specter.impl/TransformFunctions js/Object}, :doc nil}, ->ConditionalPath {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 507, :column 10, :end-line 507, :end-column 25, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([cond-pairs]))}, :protocols #{}, :name com.rpl.specter.impl/->ConditionalPath, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 25, :method-params ([cond-pairs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 507, :end-line 507, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cond-pairs])), :skip-protocol-flag nil}, SelectCollector {:num-fields 2, :protocols #{}, :name com.rpl.specter.impl/SelectCollector, :file "src/com/rpl/specter/impl.cljc", :end-column 25, :type true, :column 10, :line 450, :record false, :end-line 450, :skip-protocol-flag nil}, PutValCollector {:num-fields 1, :protocols #{}, :name com.rpl.specter.impl/PutValCollector, :file "src/com/rpl/specter/impl.cljc", :end-column 25, :type true, :column 10, :line 489, :record false, :end-line 489, :skip-protocol-flag nil}, TransformFunctions {:num-fields 3, :protocols #{}, :name com.rpl.specter.impl/TransformFunctions, :file "src/com/rpl/specter/impl.cljc", :end-column 28, :type true, :column 10, :line 54, :record false, :end-line 54, :skip-protocol-flag nil}, StructurePathExecutor {:name com.rpl.specter.impl/StructurePathExecutor, :file "src/com/rpl/specter/impl.cljc", :line 45, :column 1, :end-line 45, :end-column 27, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 45, :column 6, :end-line 45, :end-column 27}}, WalkerStructurePath {:num-fields 1, :protocols #{}, :name com.rpl.specter.impl/WalkerStructurePath, :file "src/com/rpl/specter/impl.cljc", :end-column 29, :type true, :column 10, :line 405, :record false, :end-line 405, :skip-protocol-flag nil}, FirstStructurePath {:num-fields 0, :protocols #{}, :name com.rpl.specter.impl/FirstStructurePath, :file "src/com/rpl/specter/impl.cljc", :end-column 28, :type true, :column 10, :line 396, :record false, :end-line 396, :skip-protocol-flag nil}, append {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 266, :column 8, :end-line 266, :end-column 14, :private true, :arglists (quote ([coll elem]))}, :private true, :name com.rpl.specter.impl/append, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 14, :method-params ([coll elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 266, :end-line 266, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll elem]))}, conj-all! {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 312, :column 8, :end-line 312, :end-column 17, :private true, :arglists (quote ([cell elems]))}, :private true, :name com.rpl.specter.impl/conj-all!, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 17, :method-params ([cell elems]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 312, :end-line 312, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cell elems]))}, CodeWalkerStructurePath {:num-fields 1, :protocols #{}, :name com.rpl.specter.impl/CodeWalkerStructurePath, :file "src/com/rpl/specter/impl.cljc", :end-column 33, :type true, :column 10, :line 414, :record false, :end-line 414, :skip-protocol-flag nil}, StructureValsPathComposer {:impls (cljs.core/PersistentVector js/Object nil)}, set-cell! {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 255, :column 7, :end-line 255, :end-column 16, :arglists (quote ([cell val]))}, :name com.rpl.specter.impl/set-cell!, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 16, :method-params ([cell val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cell val]))}, ->ExecutorFunctions {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 28, :column 10, :end-line 28, :end-column 27, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([type select-executor transform-executor]))}, :protocols #{}, :name com.rpl.specter.impl/->ExecutorFunctions, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 27, :method-params ([type select-executor transform-executor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([type select-executor transform-executor])), :skip-protocol-flag nil}, coerce-path {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 58, :column 4, :end-line 58, :end-column 15, :protocol com.rpl.specter.impl/CoerceTransformFunctions, :doc nil, :arglists (quote ([this]))}, :protocol com.rpl.specter.impl/CoerceTransformFunctions, :name com.rpl.specter.impl/coerce-path, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, ConditionalPath {:num-fields 1, :protocols #{}, :name com.rpl.specter.impl/ConditionalPath, :file "src/com/rpl/specter/impl.cljc", :end-column 25, :type true, :column 10, :line 507, :record false, :end-line 507, :skip-protocol-flag nil}, structure-path-impl {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 97, :column 7, :end-line 97, :end-column 26, :arglists (quote ([this]))}, :name com.rpl.specter.impl/structure-path-impl, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this]))}, MutableCell {:num-fields 1, :protocols #{com.rpl.specter.impl/PMutableCell}, :name com.rpl.specter.impl/MutableCell, :file "src/com/rpl/specter/impl.cljc", :end-column 21, :type true, :column 10, :line 246, :record false, :end-line 246, :skip-protocol-flag nil}, structure-path? {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 130, :column 7, :end-line 130, :end-column 22, :arglists (quote ([obj]))}, :name com.rpl.specter.impl/structure-path?, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 22, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, throw-illegal {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 18, :column 7, :end-line 18, :end-column 20, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name com.rpl.specter.impl/throw-illegal, :variadic true, :file "src/com/rpl/specter/impl.cljc", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, ->KeyPath {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 440, :column 10, :end-line 440, :end-column 17, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([akey]))}, :protocols #{}, :name com.rpl.specter.impl/->KeyPath, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 17, :method-params ([akey]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 440, :end-line 440, :max-fixed-arity 1, :fn-var true, :arglists (quote ([akey])), :skip-protocol-flag nil}, ->PutValCollector {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 489, :column 10, :end-line 489, :end-column 25, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([val]))}, :protocols #{}, :name com.rpl.specter.impl/->PutValCollector, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 25, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 489, :end-line 489, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val])), :skip-protocol-flag nil}, comp-unoptimal {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 234, :column 7, :end-line 234, :end-column 21, :arglists (quote ([sp]))}, :name com.rpl.specter.impl/comp-unoptimal, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 21, :method-params ([sp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sp]))}, SetExtremes {:meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 269, :column 14, :end-line 269, :end-column 25, :doc nil, :protocol-symbol true, :protocol-info {:methods {set-first [[s val]], set-last [[s val]]}}}, :protocol-symbol true, :name com.rpl.specter.impl/SetExtremes, :file "src/com/rpl/specter/impl.cljc", :end-column 25, :column 1, :line 269, :protocol-info {:methods {set-first [[s val]], set-last [[s val]]}}, :info nil, :end-line 269, :impls #{cljs.core/PersistentVector js/Object}, :doc nil}, coerce-structure-path {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 103, :column 7, :end-line 103, :end-column 28, :arglists (quote ([this]))}, :name com.rpl.specter.impl/coerce-structure-path, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 28, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this]))}, obj-extends? {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 127, :column 7, :end-line 127, :end-column 19, :arglists (quote ([prot obj]))}, :name com.rpl.specter.impl/obj-extends?, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 19, :method-params ([prot obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prot obj]))}, no-prot-error-str {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 60, :column 7, :end-line 60, :end-column 24, :arglists (quote ([obj]))}, :name com.rpl.specter.impl/no-prot-error-str, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 24, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, benchmark {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([iters afn]))}, :name com.rpl.specter.impl/benchmark, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 16, :method-params ([iters afn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([iters afn]))}, coerce-structure-vals-path {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 74, :column 7, :end-line 74, :end-column 33, :arglists (quote ([this]))}, :name com.rpl.specter.impl/coerce-structure-vals-path, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 33, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this]))}, set-last-list {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 276, :column 8, :end-line 276, :end-column 21, :private true, :arglists (quote ([l v]))}, :private true, :name com.rpl.specter.impl/set-last-list, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 21, :method-params ([l v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 276, :end-line 276, :max-fixed-arity 2, :fn-var true, :arglists (quote ([l v]))}, StructureValsPathExecutor {:name com.rpl.specter.impl/StructureValsPathExecutor, :file "src/com/rpl/specter/impl.cljc", :line 30, :column 1, :end-line 30, :end-column 31, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 30, :column 6, :end-line 30, :end-column 31}}, ->TransformFunctions {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 54, :column 10, :end-line 54, :end-column 28, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([executors selector transformer]))}, :protocols #{}, :name com.rpl.specter.impl/->TransformFunctions, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 28, :method-params ([executors selector transformer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 54, :end-line 54, :max-fixed-arity 3, :fn-var true, :arglists (quote ([executors selector transformer])), :skip-protocol-flag nil}, compiled-select* {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 315, :column 7, :end-line 315, :end-column 23, :arglists (quote ([tfns structure]))}, :name com.rpl.specter.impl/compiled-select*, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 23, :method-params ([tfns structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 315, :end-line 315, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tfns structure]))}, ->ViewPath {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 479, :column 10, :end-line 479, :end-column 18, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([view-fn]))}, :protocols #{}, :name com.rpl.specter.impl/->ViewPath, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 18, :method-params ([view-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 479, :end-line 479, :max-fixed-arity 1, :fn-var true, :arglists (quote ([view-fn])), :skip-protocol-flag nil}, key-transform {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 362, :column 7, :end-line 362, :end-column 20, :arglists (quote ([akey structure next-fn]))}, :name com.rpl.specter.impl/key-transform, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 20, :method-params ([akey structure next-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 362, :end-line 362, :max-fixed-arity 3, :fn-var true, :arglists (quote ([akey structure next-fn]))}, codewalk-until {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 303, :column 8, :end-line 303, :end-column 22, :private true, :arglists (quote ([pred on-match-fn structure]))}, :private true, :name com.rpl.specter.impl/codewalk-until, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 22, :method-params ([pred on-match-fn structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 303, :end-line 303, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pred on-match-fn structure]))}, get-cell {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 258, :column 7, :end-line 258, :end-column 15, :arglists (quote ([cell]))}, :name com.rpl.specter.impl/get-cell, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 15, :method-params ([cell]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cell]))}, set-first {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 270, :column 4, :end-line 270, :end-column 13, :protocol com.rpl.specter.impl/SetExtremes, :doc nil, :arglists (quote ([s val]))}, :protocol com.rpl.specter.impl/SetExtremes, :name com.rpl.specter.impl/set-first, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 13, :method-params ([s val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 269, :end-line 270, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s val])), :doc nil}, AllStructurePath {:num-fields 0, :protocols #{}, :name com.rpl.specter.impl/AllStructurePath, :file "src/com/rpl/specter/impl.cljc", :end-column 26, :type true, :column 10, :line 366, :record false, :end-line 366, :skip-protocol-flag nil}, ->ValCollect {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 380, :column 10, :end-line 380, :end-column 20, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([]))}, :protocols #{}, :name com.rpl.specter.impl/->ValCollect, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 380, :end-line 380, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :skip-protocol-flag nil}, fn-invocation? {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 298, :column 8, :end-line 298, :end-column 22, :private true, :arglists (quote ([f]))}, :private true, :name com.rpl.specter.impl/fn-invocation?, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 22, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 298, :end-line 298, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, Collector {:impls (com.rpl.specter.impl/PutValCollector com.rpl.specter.impl/SelectCollector com.rpl.specter.impl/ValCollect)}, walk-select {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 335, :column 8, :end-line 335, :end-column 19, :private true, :arglists (quote ([pred continue-fn structure]))}, :private true, :name com.rpl.specter.impl/walk-select, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 19, :method-params ([pred continue-fn structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 335, :end-line 335, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pred continue-fn structure]))}, ->FilterStructurePath {:protocol-inline nil, :meta {:file "/Users/pietromenna/git/specter/src/com/rpl/specter/impl.cljc", :line 424, :column 10, :end-line 424, :end-column 29, :protocols #{}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([path]))}, :protocols #{}, :name com.rpl.specter.impl/->FilterStructurePath, :variadic false, :file "src/com/rpl/specter/impl.cljc", :end-column 29, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 424, :end-line 424, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path])), :skip-protocol-flag nil}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :transform* :svalspath :spath :select-full* :select* :collect-val :transform-full* :impls}, :order [:svalspath :spath :select-full* :transform-full* :collect-val :impls :select* :transform* :else]}, :doc nil}